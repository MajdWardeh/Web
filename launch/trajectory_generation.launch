<?xml version="1.0"?>
<launch>
 <!-- COPIED FROM base_quad_simulator_no_gui.launch -->

    <arg name="quad_name" default="hummingbird"/>
    <arg name="mav_name" default="$(arg quad_name)"/>
    <arg name="model" value="$(find basic_rl_agent)/resources/$(arg quad_name)_rgbcamera300200.gazebo"/>
    <arg name="custom_models" default="$(find drone_racing)/resources"/>

    <arg name="enable_logging" default="false" />
    <arg name="enable_ground_truth" default="true" />
    <arg name="log_file" default="$(arg mav_name)" />

    <arg name="x_init" default="25.0"/>
    <arg name="y_init" default="20.0"/>



    <!-- RotorS stuff to spawn the quadrotor !-->
    <group ns="$(arg mav_name)">
        <!-- <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
            <arg name="mav_name" value="$(arg mav_name)" />
            <arg name="model" value="$(arg model)" />
            <arg name="enable_logging" value="$(arg enable_logging)" />
            <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
            <arg name="log_file" value="$(arg log_file)"/>
            <arg name="x" value="$(arg x_init)" />
            <arg name="y" value="$(arg y_init)" />
        </include> -->
		
        <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
            <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_$(arg mav_name).yaml" />
            <rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name).yaml" />
            <remap from="odometry" to="odometry_sensor1/odometry" />
        </node>
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
        <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />


        <!--- Trajectory planner -->
        <!-- <node name="planner" pkg="mav_trajectory_generation_example" type="trajectory_generation_example" output="screen">
            <rosparam command="load" file="$(find mav_trajectory_generation_example)/cfg/$(arg mav_name)_params.yaml"/>
            <remap from="uav_pose" to="odometry_sensor1/odometry"/>
        </node> -->

        <!--- Trajectory sampler -->
        <!-- <node name="sampler" pkg="mav_trajectory_generation_ros" type="trajectory_sampler_node" output="screen">
            <remap from="path_segments_4D" to="trajectory"/>
        </node> -->



    </group>



</launch>
